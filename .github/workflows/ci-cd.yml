name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  DOCKER_REGISTRY: docker.io
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/e-commerce-api-gateway

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Update package-lock.json
      run: npm install
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      id: run_tests
      run: |
        cp .env.test .env
        npm test || (echo "::error::Unit tests failed" && exit 1)
      
    - name: Run e2e tests
      id: run_e2e_tests
      run: |
        cp .env.test .env
        npm run test:e2e || (echo "::error::E2E tests failed" && exit 1)
    
    - name: Report test status
      if: always()
      run: |
        if [ "${{ steps.run_tests.outcome }}" == "failure" ] || [ "${{ steps.run_e2e_tests.outcome }}" == "failure" ]; then
          echo "Tests failed! Deployment blocked."
          exit 1
        fi

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'push' && 
      (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') &&
      needs.test.result == 'success'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Get version
      id: version
      run: |
        # Get version from package.json
        VERSION=$(node -p "require('./package.json').version")
        echo "VERSION=$VERSION" >> $GITHUB_ENV
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}-${{ github.sha }}
